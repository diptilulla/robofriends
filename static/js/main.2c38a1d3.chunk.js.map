{"version":3,"sources":["Components/SearchBox.js","Components/Card.js","Components/CardList.js","Components/ErrorBoundary.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Card","props","id","name","email","alt","src","CardList","robots","map","user","i","ErrorBoundary","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAUeA,EARG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,aAChB,OACI,qBAAKC,UAAU,MAAf,SACA,uBAAOA,UAAU,iCAAiCC,KAAK,SAASC,YAAY,gBAAgBC,SAAUJ,OCU/FK,EAbF,SAACC,GACb,IACUC,EAAiBD,EAAjBC,GAAGC,EAAcF,EAAdE,KAAKC,EAASH,EAATG,MACf,OACE,sBAAKR,UAAU,sDAAf,UACE,qBAAKS,IAAI,QAAQC,IAAG,+BAA0BJ,EAA1B,cACpB,gCACI,6BAAKC,IACL,4BAAIC,WCWDG,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZ,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEAT,GAAIQ,EAAKR,GACTC,KAAMO,EAAKP,KACXC,MAAOM,EAAKN,OAHPO,SCgBdC,G,yDAtBX,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDY,MAAQ,CACTC,UAAU,GAHC,E,8DAQDC,EAAMC,GACxBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAKpB,OAAIG,KAAKJ,MAAMC,SACJ,0DAEJG,KAAKhB,MAAMkB,a,GAlBEC,cCSbC,EAVA,SAACpB,GACZ,OACI,qBAAKqB,MAAO,CAACC,UAAW,SAASC,OAAO,kBAAmBC,OAAO,SAAlE,SACGxB,EAAMkB,YC6CFO,G,yDAzCb,aAAe,IAAD,8BACZ,gBAaFC,eAAe,SAACC,GACd,EAAKV,SAAS,CAACW,YAAaD,EAAME,OAAOC,SAbzC,EAAKlB,MAAQ,CACXL,OAAQ,GACRqB,YAAY,IAJF,E,gEAQO,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAG,EAAKlB,SAAS,CAACV,OAAO4B,S,+BAO7B,IAAD,EACuBnB,KAAKJ,MAA3BL,EADD,EACCA,OAAOqB,EADR,EACQA,YACRQ,EAAiB7B,EAAO8B,QAAO,SAAAC,GACnC,OAAOA,EAAMpC,KAAKqC,cAAcC,SAASZ,EAAYW,kBAEvD,OAAKhC,EAAOkC,OAIN,sBAAK9C,UAAU,KAAf,UACE,oBAAIA,UAAU,WAAd,yBACA,cAAC,EAAD,CAAWD,aAAcsB,KAAKU,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACA,cAAC,EAAD,CAAUnB,OAAQ6B,WARnB,6C,GAzBMjB,cCIJuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2c38a1d3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}  ) => {\r\n    return (\r\n        <div className='pa2'>\r\n        <input className='pa3 ba b--green bg-washed-blue' type='search' placeholder='search robots' onChange={searchChange} />\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = (props) =>   //or we can destructure props inside the bracket like const Card = ({id,name,email})\r\n{\r\n    const {id,name,email} = props;  //es6 destructuring\r\n    return(\r\n      <div className=' tc bg-light-pink dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n        <img alt='robot' src={`https://robohash.org/${id}?200*200`}/>\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => { //destructured props\r\n        return (\r\n            <div>\r\n            {\r\n                robots.map((user,i) => {\r\n                    return (\r\n                        <Card \r\n                        key={i} \r\n                        id={user.id} \r\n                        name={user.name} \r\n                        email={user.email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n            </div>\r\n        );\r\n}\r\nexport default CardList; ","import { render } from '@testing-library/react';\r\nimport React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidCatch(error,info) {\r\n    this.setState({hasError:true}) ; \r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooops. that is not goog.</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll',border:'1px solid white', height:'800px'}}>\r\n          {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n//like html inline styles 1st curly brackets since js expression which return js object which can have tyles as properties of the object\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport CardList from '../Components/CardList';\r\n//import { robots } from './robots';we have to destructure since 'export' can have multiple exports like if apart from robots we had another variable cats then {robots , cats }\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\nimport Scroll from '../Components/Scroll';\r\nimport './App.css';\r\n\r\nclass  App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {           //for state to reside parent element should be a class &  state is in the parent component i.e. App which passes props to child components i.e. SearchBox & CardList\r\n      robots: [],\r\n      searchfield:''\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {      //in-buit function so arrow format not needed\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response =>  response.json())\r\n    .then(users=> this.setState({robots:users}));\r\n  }\r\n\r\n  onSearchChange=(event)=>{    //method of class/object App to make value of this equal to App and not input(where we called the function hence this=input) we use arrow functions to make sure that 'this' is acc to where it was created\r\n    this.setState({searchfield: event.target.value}); //setState in-built function to change state here value of object property searchfiel changed\r\n  }\r\n\r\n  render(){\r\n    const {robots,searchfield} = this.state;\r\n    const filteredRobots = robots.filter(robot=>{\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n    if (!robots.length) {\r\n      return <h1>Loading</h1>\r\n    } else {\r\n        return(\r\n          <div className='tc'>\r\n            <h1 className='white f1'>RoboFriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange} />\r\n            <Scroll>\r\n              <ErrorBoundary>\r\n              <CardList robots={filteredRobots}/>\r\n              </ErrorBoundary>\r\n            </Scroll>\r\n          </div>\r\n        );\r\n      }\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}